@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin center-horizontal-vertical {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

//MEDIA QUERY MANAGER

/*
0-600px:    Phone
600-900px:  Tablet portrait
900-1200px: Tablet landscape
[1200-1800] - here normal styles apply
0-600px:    Big desktop */

//@mixin respond-phone {
//    @media (max-width: 600px) { @content }; 
//} - it allows us to pass a block of code into a mixin   - example purposes. We use advanced way below

/*
$breakpoint argument choices:
- phone
- tab-port
- tab-land
- big-desktop


ORDER: BASE + TYPOGRAPHY > GENERAL LAYOUT + GRID > PAGE LAYOUT > COMPONENTS 

1em=16px
*/

// 600px/16=37.5em

@mixin respond($breakpoint) {
    @if $breakpoint == phone {
        @media only screen and (max-width: 37.5em) { @content };
    } //600px
    @if $breakpoint == tab-port {
        @media only screen and (max-width: 56.25em) { @content };
    } //900px
    @if $breakpoint == tab-land {
        @media only screen and (max-width: 75em) { @content };
    } //1200px
    @if $breakpoint == big-desktop {
        @media only screen and (min-width: 112.5em) { @content };
    } //1800px

    //rems and ems are not affeted by the root font-size setting
    //em - the best of option of @media. rem don't work in some browsers. 
    
}